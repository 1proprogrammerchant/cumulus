{
  "title": "Message Envelope",
  "description": "Describes the structure of data that is used to pass information between steps of the workflow. It contains information about the configuration of the entire run, the item being processed, resources in AWS, and payload information from the previous step.",
  "type": "object",
  "properties": {
    "ingest_meta": {
      "$ref": "#/definitions/IngestMetaType"
    },
    "meta": {
      "description": "Metadata taken from the 'meta' attribute of the collection (or the empty object). Tasks may add fields to the 'meta' object at will (in their returned output) in order to pass data to future tasks. Tasks should avoid assuming that fields are present in the meta object and avoid naming fields to put in the meta object, preferring instead to let configuration decide what goes into the object. See VIIRS discovery in collections.json for an example.",
      "type": "object"
    },
    "provider": {
      "description": "Provider configuration information taken from the 'providers' of collection configuration.",
      "$ref": "ingest_common_schema.json#/definitions/ProviderType"
    },
    "task_config": {
      "description": "Task configuration taken from the task_config element of the collection configuration.",
      "$ref": "ingest_common_schema.json#/definitions/TaskConfigType"
    },
    "resources": {
      "$ref": "#/definitions/ResourcesType"
    },
    "exception": {
      "description": "An optional field that a task can return with any valid as a signal that the task aborted for a reason. Information in this can be used by the workflow to determine next steps."
    },
    "payload": {
      "description": "A Task-specific payload. This can be any data type required by the Task. It can be considered the input and output of the Task, whereas the other fields are execution context. Tasks should document their expected payload input and output formats. Generally a Task will return an object which is nearly identical to its input in all fields but 'payload', and 'payload' will be completely different"
    }
  },
  "patternProperties": {
    "^_.*$": {
      "description": "Any fields starting with _ are ignored."
    }
  },
  "additionalProperties": false,
  "required": ["meta", "provider", "task_config", "resources"],
  "definitions": {
    "IngestMetaType": {
      "description": "Fields set by ingest about the current ingest run.",
      "type": "object",
      "properties": {
        "start_date": {
          "description": "The date ingest started",
          "format": "date-time",
          "type": "string"
        },
        "event_source": {
          "description": "A string describing the source that caused ingest to start.",
          "type": "string",
          "enum": ["sfn", "stdin"]
        }
      },
      "patternProperties": {
        "^_.*$": {
          "description": "Any fields starting with _ are ignored."
        }
      },
      "additionalProperties": false
    },
    "ResourcesType": {
      "description": "External resources accessible to the Task. Tasks should generally prefer to be passed resources explicitly in their configuration rather than looking up paths here. The paths being present here, however allows configuration to parameterize values that are not known until the stack is created.  For instance, a configuration field have the value \"{resources.buckets.private}\", which instructs the Task to look up the private bucket while allowing the Task to remain ignorant of what buckets are available.",
      "type": "object",
      "properties": {
        "stack": {
          "description": "The name of the Task's CloudFormation Task, useful as a prefix",
          "type": "string",
          "minLength": 1
        },
        "buckets": {
          "description": "Names of S3 buckets available to the app",
          "type": "object",
          "properties": {
            "config": {
              "description": "The name of the bucket holding configuration and deployment data",
              "type": "string",
              "minLength": 1
            },
            "private": {
              "description": "The name of the bucket which holds internal platform data",
              "type": "string",
              "minLength": 1
            },
            "public": {
              "description": "The name of the bucket which holds data to be served publicly",
              "type": "string",
              "minLength": 1
            }
          },
          "required": ["config", "private", "public"]
        },
        "tables": {
          "description": "Configured table information in AWS.",
          "type": "object",
          "properties": {
            "connections": {
              "description": "The name of table keeping track of connections used.",
              "type": "string",
              "minLength": 1
            },
            "locks": {
              "description": "The name of the table keeping track of locks used during ingest.",
              "type": "string",
              "minLength": 1
            }
          },
          "required": ["connections", "locks"],
          "patternProperties": {
            "^_.*$": {
              "description": "Any fields starting with _ are ignored."
            }
          },
          "additionalProperties": false
        }
      },
      "required": ["stack", "buckets", "tables"],
      "patternProperties": {
        "^_.*$": {
          "description": "Any fields starting with _ are ignored."
        }
      },
      "additionalProperties": false
    }
  }
}